{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wolak\\\\OneDrive\\\\SEM 6\\\\TPSI\\\\projekt\\\\task-and-meeting-scheduler\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, autoRehydrate } from 'redux-persist';\nimport { AsyncStorage } from 'react-native';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Register from \"./components/register.component\";\nimport Login from \"./components/login.component\";\nimport Home from \"./components/home.component\";\nimport Logout from \"./components/logout.component\";\nimport Navbar from \"./components/navbar.component\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateHandler = (status, username) => {\n      console.log('update to: ' + status);\n      this.setState({\n        loggedInStatus: status,\n        username: username\n      });\n    };\n\n    this.updateHandler = this.updateHandler.bind(this);\n    this.state = {\n      loggedInStatus: Cookies.get('loggedInStatus'),\n      username: Cookies.get('username')\n    };\n    this.state = {\n      loggedInStatus: false,\n      username: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      loggedInStatus: this.state.loggedInStatus,\n      updateHandler: this.updateHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: props => /*#__PURE__*/React.createElement(Login, Object.assign({\n        updateHandler: this.updateHandler\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 34\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      component: Register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/logout\",\n      component: Logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Home, Object.assign({\n        username: this.state.username,\n        loggedInStatus: this.state.loggedInStatus\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 34\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  configureStore() {\n    const store = createStore(reducers, getInitialState(), compose(applyMiddleware([thunk, localStorageMiddleware, logger]), autoRehydrate()));\n    persistStore(store, {\n      storage: AsyncStorage\n    });\n    return store;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/wolak/OneDrive/SEM 6/TPSI/projekt/task-and-meeting-scheduler/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Cookies","createStore","applyMiddleware","compose","persistStore","autoRehydrate","AsyncStorage","Register","Login","Home","Logout","Navbar","App","constructor","props","updateHandler","status","username","console","log","setState","loggedInStatus","bind","state","get","render","configureStore","store","reducers","getInitialState","thunk","localStorageMiddleware","logger","storage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, autoRehydrate } from 'redux-persist';\nimport { AsyncStorage } from 'react-native';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Register from \"./components/register.component\";\nimport Login from \"./components/login.component\";\nimport Home from \"./components/home.component\";\nimport Logout from \"./components/logout.component\";\nimport Navbar from \"./components/navbar.component\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateHandler = this.updateHandler.bind(this);\n\n    \n    this.state = {\n      loggedInStatus: Cookies.get('loggedInStatus'),\n      username: Cookies.get('username'),\n    };\n\n    this.state = {\n      loggedInStatus: false,\n      username: '',\n    };\n  }\n  \n  updateHandler = (status, username) => {\n    console.log('update to: ' + status);\n    this.setState({\n      loggedInStatus: status,\n      username: username\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Navbar \n            loggedInStatus={this.state.loggedInStatus}\n            updateHandler={this.updateHandler}\n          />\n          <Switch>\n            <Route\n              path=\"/login\" \n              render={(props) => <Login updateHandler={this.updateHandler} {...props}/>}\n            />\n            <Route path=\"/register\" component={Register} />\n            <Route\n              path=\"/logout\"\n              component={Logout}\n            />\n            <Route path=\"/\"\n              render={(props) => <Home username={this.state.username} loggedInStatus={this.state.loggedInStatus} {...props}/>}\n            />\n          </Switch>\n          <br />\n        </div>\n      </Router>\n    );\n  }\n\n  configureStore() {\n\n    const store = createStore(reducers, getInitialState(), compose(\n        applyMiddleware([\n            thunk,\n            localStorageMiddleware,\n            logger\n        ]),\n        autoRehydrate()\n       )\n    );\n \n    persistStore(store, { storage: AsyncStorage });\n \n    return store;\n }\n}\n"]},"metadata":{},"sourceType":"module"}